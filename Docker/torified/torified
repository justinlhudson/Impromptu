#!/bin/bash

# Usage: [name] [option]
# Options:
# 	-clean
# 	-build 
# 	-stop 
# 	-import 
# 	-export

HOST=$(hostname)
IMAGE="torified"
CONTAINER="$IMAGE"_container

# Wait for docker
chmod 777 "/var/run/docker.sock"
docker_lock=/var/run/docker.sock
while [ ! -e $docker_lock ] ; do
  inotifywait -t 2 -e create $(dirname $docker_lock)
done

while getopts "cbsei" opt ${@:2}; do
  case $opt in
  	c)
      echo "Clear: $CONTAINER"
  	  docker rm $CONTAINER
  	  exit
  	  ;;
  	b)
      echo "Build: $IMAGE"
  	  docker build --quiet=false --no-cache=false --rm=false --tag "$IMAGE" .
  	  exit
  	  ;;
  	s)
      echo "Stop: $CONTAINER"
  	  docker stop $CONTAINER > /dev/null 2>&1
      exit
      ;;
    e)
      echo "Export: $CONTAINER"
      docker stop $CONTAINER > /dev/null 2>&1
      docker export $CONTAINER | gzip -c > $CONTAINER.tgz
      exit
      ;;
    i)
      echo "Import: $IMAGE"
      docker stop $CONTAINER > /dev/null 2>&1
      docker rm $CONTAINER > /dev/null 2>&1
      docker rmi $IMAGE > /dev/null 2>&1
      gzip -dc "$IMAGE".tgz | docker import - $IMAGE
      exit
      ;;
  	\?)	 
	  echo "Usage: "
	  ;;
  esac
done

# Shared Volumes
if [ ! -d /docker ]; then
  mkdir -p /docker
fi

volumes="-v /docker:/docker"

# Ports (tor, torDir, privoxy)
ports="-p 9001:9001 -p 9030:9030 -p 8118:22"

docker stop $CONTAINER > /dev/null 2>&1
docker rm $CONTAINER > /dev/null 2>&1
PID=$(docker run -d -h $HOST $volumes $ports -name $CONTAINER $IMAGE)

exit
